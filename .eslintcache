[{"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\index.js":"1","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\reportWebVitals.js":"2","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\App.js":"3","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\Weeks.js":"4","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\Day.js":"5","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\Home.js":"6","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\DayHeader.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":630,"mtime":1610048225857,"results":"11","hashOfConfig":"9"},{"size":1171,"mtime":1610048301159,"results":"12","hashOfConfig":"9"},{"size":7021,"mtime":1609725687556,"results":"13","hashOfConfig":"9"},{"size":863,"mtime":1609727907848,"results":"14","hashOfConfig":"9"},{"size":502,"mtime":1609530996054,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jgz1z6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\index.js",[],["34","35"],"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\reportWebVitals.js",[],"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\App.js",[],"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\Weeks.js",["36","37","38","39","40"],"C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\Day.js",["41","42","43","44","45","46","47","48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/days.css\";\r\nimport DayHeader from \"./DayHeader\";\r\n\r\n//exercise_type_id refers to clean and jerk/clean deadlifts, respectfully\r\n//exercise and sets tables are joined in this example\r\nconst exercises = [\r\n  {\r\n    id: \"10\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"0\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"40\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"2\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"11\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"0\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"50\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n  {\r\n    id: \"12\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"0\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"55\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n  {\r\n    id: \"13\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"1\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"60\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n  {\r\n    id: \"14\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"2\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n  {\r\n    id: \"15\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"3\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n  {\r\n    id: \"16\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"3\",\r\n    workout_id: \"3\",\r\n    workout_phase: \"4\",\r\n    exercise_order: \"1\",\r\n    notes: \"clean and jerk notes\",\r\n    target: \"\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"2\",\r\n  },\r\n\r\n  {\r\n    id: \"20\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"0\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"60\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"21\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"0\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"70\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"22\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"1\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"85\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"23\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"2\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"85\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"24\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"3\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"85\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n  {\r\n    id: \"25\",\r\n    program_id: \"21313\",\r\n    exercise_type_id: \"23\",\r\n    workout_id: \"4\",\r\n    workout_phase: \"4\",\r\n    exercise_order: \"2\",\r\n    notes: \"clean deadlift notes\",\r\n    target: \"85\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"1\",\r\n    order_num: \"1\",\r\n  },\r\n];\r\n//These tables are seperate\r\nconst sets = [\r\n  {\r\n    exercise_id: \"10\",\r\n    target: \"40\",\r\n    actual: \"\",\r\n    reps: \"2\",\r\n    times: \"2\",\r\n    order_num: \"1\",\r\n  },\r\n];\r\n\r\nexport default function Day(props) {\r\n  const [workoutrow, setWorkout] = useState([]);\r\n  useEffect(() => {\r\n    setWorkout(workouts());\r\n  }, []);\r\n\r\n  //Get number of total unique exercises\r\n  const numOfExercises = exercises.reduce((acc, current_exercise) => {\r\n    return current_exercise.exercise_order > acc\r\n      ? (acc = current_exercise.exercise_order)\r\n      : (acc = acc);\r\n  }, 0);\r\n\r\n  const workouts = () => {\r\n    //Empty array for pushing workout rows to\r\n    let rows = [];\r\n    //Iterate over the number of total exercises\r\n    for (let i = 1; i <= numOfExercises; i++) {\r\n      //Determine the number of workout phases for a given exercise\r\n      const filteredExercises = exercises\r\n        .filter((exercises) => exercises.program_id == props.location.state.id)\r\n        .filter((exercise) => {\r\n          return exercise.exercise_order == i;\r\n        });\r\n      //Get the notes for the first element in the filtered exercises Array\r\n      const currentExerciseName = filteredExercises[0].notes;\r\n      //Get number of workoutPhases for current exercise\r\n      const numOfWorkoutPhases = filteredExercises.reduce(\r\n        (acc, current_exercise) => {\r\n          return current_exercise.workout_phase > acc\r\n            ? (acc = current_exercise.workout_phase)\r\n            : (acc = acc);\r\n        },\r\n        0\r\n      );\r\n      //Array for workout divs\r\n      let workoutAr = [];\r\n      //iterate through all phase of a workout\r\n      for (\r\n        let workoutPhase = 0;\r\n        workoutPhase <= numOfWorkoutPhases;\r\n        workoutPhase++\r\n      ) {\r\n        // create divs for the number of sets included in a given workout phase\r\n        const currentWPSets = filteredExercises\r\n          .filter((curr) => curr.workout_phase == workoutPhase)\r\n          .map((curr) => {\r\n            if (curr.target == \"\" && curr.workout_phase == numOfWorkoutPhases) {\r\n              return <div className=\"rep empty last-workout\"></div>;\r\n            } else if (curr.target === \"\") {\r\n              return <div className=\"rep empty\"></div>;\r\n            } else\r\n              return (\r\n                <div className=\"rep\">{` ${curr.target} / ${curr.reps} * ${curr.times},`}</div>\r\n              );\r\n          });\r\n        //container for the sets of a workout phase\r\n        workoutAr.push(\r\n          <div className=\"workout\" id={workoutPhase}>\r\n            {currentWPSets}\r\n          </div>\r\n        );\r\n      }\r\n      workoutAr.unshift(\r\n        <div className=\"exercise-type\">{currentExerciseName} 3 * 2</div>\r\n      );\r\n\r\n      rows.push(workoutAr);\r\n    }\r\n    const theseRows = rows.map((row) => {\r\n      return <div className=\"workout-container\"> {row} </div>;\r\n    });\r\n    return theseRows;\r\n  };\r\n\r\n  return (\r\n    <div className=\"day-container\">\r\n      <div className=\"program-container\">\r\n        <DayHeader dayNumber={props.location.state.dayNumber} />\r\n        {workoutrow}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\Home.js",["50","51","52","53"],"import React from \"react\";\r\nimport \"./styles/home.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"weeks-container\">\r\n        <Link\r\n          to={{\r\n            pathname: \"/weeks\",\r\n          }}\r\n        >\r\n          <p>link to weeks</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst workouts = [\r\n  { day_num: \"1\", program_id: \"21313\", week_id: \"431\" },\r\n  { day_num: \"2\", program_id: \"21314\", week_id: \"431\" },\r\n  { day_num: \"3\", program_id: \"21315\", week_id: \"431\" },\r\n  { day_num: \"4\", program_id: \"21316\", week_id: \"431\" },\r\n  { day_num: \"5\", program_id: \"21317\", week_id: \"431\" },\r\n  { day_num: \"6\", program_id: \"21318\", week_id: \"431\" },\r\n  { day_num: \"7\", program_id: \"21319\", week_id: \"431\" },\r\n];\r\n","C:\\Users\\joste\\OneDrive\\Desktop\\freddieApp\\freddieapp\\src\\programs\\DayHeader.js",["54"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/days.css\";\r\nexport default function DayHeader(props) {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"desc-headers\">\r\n      <div className=\"day-header\">\r\n        <p>Day {props.dayNumber} (reps*sets)</p>\r\n      </div>\r\n      <div className=\"warm-ups-header\">\r\n        <p>Warm-Ups:</p>\r\n      </div>\r\n      <div className=\"working-weights-header\">\r\n        <p>Working Weights:</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":3,"column":27,"nodeType":"61","messageId":"62","endLine":3,"endColumn":33},{"ruleId":"59","severity":1,"message":"64","line":3,"column":35,"nodeType":"61","messageId":"62","endLine":3,"endColumn":41},{"ruleId":"59","severity":1,"message":"65","line":3,"column":43,"nodeType":"61","messageId":"62","endLine":3,"endColumn":48},{"ruleId":"59","severity":1,"message":"66","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":11},{"ruleId":"59","severity":1,"message":"67","line":193,"column":7,"nodeType":"61","messageId":"62","endLine":193,"endColumn":11},{"ruleId":"68","severity":1,"message":"69","line":208,"column":6,"nodeType":"70","endLine":208,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":214,"column":16,"nodeType":"61","messageId":"74","endLine":214,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":224,"column":53,"nodeType":"77","messageId":"78","endLine":224,"endColumn":55},{"ruleId":"75","severity":1,"message":"76","line":226,"column":42,"nodeType":"77","messageId":"78","endLine":226,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":235,"column":22,"nodeType":"61","messageId":"74","endLine":235,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":249,"column":48,"nodeType":"77","messageId":"78","endLine":249,"endColumn":50},{"ruleId":"75","severity":1,"message":"76","line":251,"column":29,"nodeType":"77","messageId":"78","endLine":251,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":251,"column":57,"nodeType":"77","messageId":"78","endLine":251,"endColumn":59},{"ruleId":"59","severity":1,"message":"63","line":3,"column":27,"nodeType":"61","messageId":"62","endLine":3,"endColumn":33},{"ruleId":"59","severity":1,"message":"64","line":3,"column":35,"nodeType":"61","messageId":"62","endLine":3,"endColumn":41},{"ruleId":"59","severity":1,"message":"65","line":3,"column":43,"nodeType":"61","messageId":"62","endLine":3,"endColumn":48},{"ruleId":"59","severity":1,"message":"79","line":19,"column":7,"nodeType":"61","messageId":"62","endLine":19,"endColumn":15},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Day' is defined but never used.","'sets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'workouts'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-self-assign","'acc' is assigned to itself.","selfAssignment","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'workouts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [workouts]",{"range":"85","text":"86"},[4226,4228],"[workouts]"]